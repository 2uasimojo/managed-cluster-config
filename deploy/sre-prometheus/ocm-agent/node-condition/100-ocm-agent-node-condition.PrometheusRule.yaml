apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: sre-node-condition-managed-notification-alerts
    role: alert-rules 
  name: sre-node-condition-managed-notification-alerts
  namespace: openshift-monitoring
spec:
  groups:
  - name: sre-node-condition-managed-notification-alerts.record
    rules:
    - expr: label_replace
            (
                clamp(mapi_machine_created_timestamp_seconds, 0, 1) 
                * on (node) group_right(name)
                kube_node_status_condition{status!="false"}>0,
                "machineset", 
                "$1", 
                "name", 
                "^(.*)-[^-]*$"
            )
      record: sre:node:condition

  # available conditions: https://kubernetes.io/docs/reference/node/node-status/#condition 
  # TODO convert to single alert when OCM Agent supports templatized messages: https://issues.redhat.com//browse/OSD-14130
  - name: sre-node-condition-managed-notification-alerts.alert
    rules:
    - alert: NodeConditionDiskPressureNotificationSRE
      expr: count by (machineset, condition, status)
            (
              count by(node) (cluster:cpu_core_node_labels{label_node_role_kubernetes_io_infra="",label_node_role_kubernetes_io_master=""})
              * on (node) group_left(condition, machineset, status) 
              sre:node:condition{condition="DiskPressure"}
            ) > 0
      for: 20m
      labels:
        severity: info
        namespace: openshift-node
        send_managed_notification: "true"
        managed_notification_template: "NodeConditionNotification"
      annotations:
        condition: "DiskPressure"
        explanation: " Consider moving application storage off the worker node and into persistent volumes."
        documentation: "https://access.redhat.com/documentation/en-us/red_hat_openshift_service_on_aws/4/html/storage/configuring-persistent-storage"
    - alert: NodeConditionMemoryPressureNotificationSRE
      expr: count by (machineset, condition, status)
            (
              count by(node) (cluster:cpu_core_node_labels{label_node_role_kubernetes_io_infra="",label_node_role_kubernetes_io_master=""})
              * on (node) group_left(condition, machineset, status) 
              sre:node:condition{condition="MemoryPressure"}
            ) > 0
      for: 20m
      labels:
        severity: info
        namespace: openshift-node
        send_managed_notification: "true"
        managed_notification_template: "NodeConditionNotification"
      annotations:
        condition: "MemoryPressure"
        explanation: ""
        documentation: "https://access.redhat.com/documentation/en-us/red_hat_openshift_service_on_aws/4/html/cluster_administration/nodes#nodes-cluster-resource-configure-about_nodes-cluster-resource-configure"
    - alert: NodeConditionPIDPressureNotificationSRE
      expr: count by (machineset, condition, status)
            (
              count by(node) (cluster:cpu_core_node_labels{label_node_role_kubernetes_io_infra="",label_node_role_kubernetes_io_master=""})
              * on (node) group_left(condition, machineset, status) 
              sre:node:condition{condition="PIDPressure"}
            ) > 0
      for: 20m
      labels:
        severity: info
        namespace: openshift-node
        send_managed_notification: "true"
        managed_notification_template: "NodeConditionNotification"
      annotations:
        condition: "PIDPressure"
        explanation: " This means that more than the maximum allowed number of process identifiers are consumed on one or more worker nodes. This is likely to create instability in the node, as required system services may not be able to create new processes."
        documentation: "https://access.redhat.com/articles/7033551"
    - alert: NodeConditionNetworkUnavailableNotificationSRE
      expr: count by (machineset, condition, status)
            (
              count by(node) (cluster:cpu_core_node_labels{label_node_role_kubernetes_io_infra="",label_node_role_kubernetes_io_master=""})
              * on (node) group_left(condition, machineset, status) 
              sre:node:condition{condition="NetworkUnavailable"}
            ) > 0
      for: 10m
      labels:
        severity: info
        namespace: openshift-node
        send_managed_notification: "true"
        managed_notification_template: "NodeConditionNotification"
      annotations:
        condition: "NetworkUnavailable"
        explanation: " Red Hat SRE will be alerted and triage issues. If action is required, a proactive case will be opened by Red Hat."
        documentation: "https://docs.openshift.com/rosa/rosa_planning/rosa-cloud-expert-prereq-checklist.html#networking-prerequisites"
