---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sre-operator-reinstall-sa
  namespace: openshift-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sre-operator-reinstall-role
  namespace: openshift-monitoring
rules:
- apiGroups:
  - "operators.coreos.com"
  resources:
  - subscriptions
  verbs:
  - list
  - get
  - patch
- apiGroups:
  - "batch"
  resources:
  - cronjobs
  verbs:
  - list
  - get
  - delete
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - list
  - get
  - delete
- apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
  - roles
  - rolebindings
  verbs:
  - list
  - get
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sre-operator-reinstall-rb
  namespace: openshift-monitoring
roleRef:
  kind: Role
  name: sre-operator-reinstall-role
  apiGroup: rbac.authorization.k8s.io
  namespace: openshift-monitoring
subjects:
- kind: ServiceAccount
  name: sre-operator-reinstall-sa
  namespace: openshift-monitoring
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sre-operator-reinstall
  namespace: openshift-monitoring
spec:
  ttlSecondsAfterFinished: 100
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Replace
  schedule: "*/30 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: sre-operator-reinstall-sa
          restartPolicy: Never
          containers:
          - name: operator-reinstaller
            image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
            imagePullPolicy: Always
            command:
            - sh
            - -c
            - |
              #!/bin/bash
              set -euxo pipefail
              NAMESPACE=openshift-monitoring

              SUBSCRIPTION_SAVED=$(oc get subscriptions.operators.coreos.com -n "${NAMESPACE}" -ojson | jq -r 'del(.items[].metadata.annotations."kubectl.kubernetes.io/last-applied-configuration")')
              SUBSCRIPTION=$(oc get subscriptions.operators.coreos.com -n "${NAMESPACE}" -o jsonpath='{.items[*].metadata.name}')
              CATALOG_SOURCE_SAVED=$(oc get catalogsources.operators.coreos.com -n "${NAMESPACE}" -ojson | jq -r 'del(.items[].metadata.annotations."kubectl.kubernetes.io/last-applied-configuration")')
              CATALOG_SOURCE=$(oc get catalogsources.operators.coreos.com -n "${NAMESPACE}" -o jsonpath='{.items[*].metadata.name}')
              OPERATOR_GROUP_SAVED=$(oc get operatorgroups.operators.coreos.com -n "${NAMESPACE}" -ojson | jq -r 'del(.items[].metadata.annotations."kubectl.kubernetes.io/last-applied-configuration")')
              OPERATOR_GROUP=$(oc get operatorgroups.operators.coreos.com -n "${NAMESPACE}" -o jsonpath='{.items[*].metadata.name}')

              if [[ -n "${SUBSCRIPTION}" ]]; then
                oc delete subscriptions.operators.coreos.com "${SUBSCRIPTION}" -n "${NAMESPACE}"
              fi
              if [[ -n "${CATALOG_SOURCE}" ]]; then
                oc delete catalogsources.operators.coreos.com "${CATALOG_SOURCE}" -n "${NAMESPACE}"
              fi
              if [[ -n "${OPERATOR_GROUP}" ]]; then
                oc delete operatorgroups.operators.coreos.com "${OPERATOR_GROUP}" -n "${NAMESPACE}"
              fi

              for csv in $(oc get clusterserviceversions.operators.coreos.com -n "${NAMESPACE}" -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}')
              do
                oc delete clusterserviceversions.operators.coreos.com "${csv}" -n "${NAMESPACE}"
              done

              if [[ -n "${SUBSCRIPTION}" ]]; then
                echo "${SUBSCRIPTION_SAVED}" |  oc create -f -
              fi
              if [[ -n "${CATALOG_SOURCE}" ]]; then
                echo "${CATALOG_SOURCE_SAVED}" | oc create -f -
              fi
              if [[ -n "${OPERATOR_GROUP}" ]]; then
                echo "${OPERATOR_GROUP_SAVED}" | oc create -f -
              fi

              oc -n "$NAMESPACE" delete cronjob sre-operator-reinstall || true
              oc -n "$NAMESPACE" delete role sre-operator-reinstall-role || true
              oc -n "$NAMESPACE" delete rolebinding sre-operator-reinstall-rb || true
              oc -n "$NAMESPACE" delete serviceaccount sre-operator-reinstall-sa || true
              exit 0

