---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sre-operator-reinstall-sa
  namespace: openshift-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sre-operator-reinstall-role
  namespace: openshift-monitoring
rules:
  - apiGroups:
      - "operators.coreos.com"
    resources:
      - clusterserviceversions
      - subscriptions
      - installplans
    verbs:
      - list
      - get
      - delete
      - create
  - apiGroups:
      - "batch"
    resources:
      - cronjobs
    verbs:
      - list
      - get
      - delete
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - list
      - get
      - delete
  - apiGroups:
      - "rbac.authorization.k8s.io"
    resources:
      - roles
      - rolebindings
    verbs:
      - list
      - get
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sre-operator-reinstall-rb
  namespace: openshift-monitoring
roleRef:
  kind: Role
  name: sre-operator-reinstall-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: sre-operator-reinstall-sa
    namespace: openshift-monitoring
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sre-operator-reinstall
  namespace: openshift-monitoring
spec:
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Replace
  schedule: "*/30 * * * *"
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 100
      template:
        spec:
          serviceAccountName: sre-operator-reinstall-sa
          restartPolicy: Never
          containers:
            - name: operator-reinstaller
              image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
              imagePullPolicy: Always
              command:
                - sh
                - -c
                - |
                  #!/bin/bash
                  set -euxo pipefail
                  NAMESPACE=openshift-monitoring
                  OPERATOR=configure-alertmanager-operator
                  
                  # Look for a CSV, then perform the reinstall if found. If you want to _always_ reinstall, remove this check and just keep the logic inside the "if"
                  CSV_FOUND=$(oc -n "$NAMESPACE" get clusterserviceversions.operators.coreos.com -o name | grep "$OPERATOR")
                  if [[ ! -z "$CSV_FOUND" ]]; then
                    # The OLM dance
                    # delete all CSVs
                    oc get clusterserviceversions.operators.coreos.com -n $NAMESPACE | grep $OPERATOR | awk '{print $1}' | xargs oc delete clusterserviceversions.operators.coreos.com -n $NAMESPACE
                    # delete all installplans
                    oc get installplans.operators.coreos.com -n $NAMESPACE | grep $OPERATOR | awk '{print $1}' | xargs oc delete installplan.operators.coreos.com -n $NAMESPACE
                    # get subscription
                    oc get subscription.operators.coreos.com -n $NAMESPACE $OPERATOR -o json > /tmp/sub.json
                    # delete subscription
                    oc delete subscription.operators.coreos.com -n $NAMESPACE $OPERATOR
                    # create subscription using the following json
                    oc create -f /tmp/sub.json
                  fi
                  oc -n "$NAMESPACE" delete cronjob sre-operator-reinstall || true
                  oc -n "$NAMESPACE" delete role sre-operator-reinstall-role || true
                  oc -n "$NAMESPACE" delete rolebinding sre-operator-reinstall-rb || true
                  oc -n "$NAMESPACE" delete serviceaccount sre-operator-reinstall-sa || true
                  exit 0